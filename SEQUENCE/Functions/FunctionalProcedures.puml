@startuml
/'2. ФУНКЦИОНАЛЬНЫЕ ПРОЦЕДУРЫ
========================================================================================
Процедуры, заменяющие штатные средства plantUml, например: создание участников,
отрисовка стрелок, отрисовка таблиц и т.д.

Вспомогательная процедура отрисовки участников: формирует мапу имя:алиас'/
!unquoted procedure parties($partyType, $name, $alias, $order="")
    !if $order != ""
        $partyType "$name" as $alias order $order
    !else
        $partyType "$name" as $alias
    !endif
    !$aliasName = "name" + $alias
    %set_variable_value($aliasName,$name)
!endprocedure

/'Процедуры rq и rs заменяют синтаксис рисования стрелок.'/
!unquoted procedure rq($initiator, $executor, $liveLine="",$action, $comment="")
    /'проверяем, что указанные initiator и executor объявлены на диаграмме,
    если нет - будут объявлены с именем и алиасом, указанными в этом шаге'/
    !if $initiator == "*"
        %invoke_procedure("altr",$executor,$liveLine,$action, $comment)
    !else
        !$id = $id + 1
        %invoke_procedure("aliasCheck",$initiator)
        %invoke_procedure("aliasCheck",$executor)
        !if $liveLine == "..."
            $initiator -> $executor: $action
            ...
        !else
            $initiator -> $executor $liveLine: $action
        !endif
        %invoke_procedure("setMetadataVariable", $initiator, $executor, $liveLine, $action, $comment, "request")
    !endif
!endprocedure

!unquoted procedure rs($executor, $initiator, $liveLine="",$action, $comment="")
    /'Если не указать участников взаимодействия, процедура построит ответ, инвертировав
    предыдущий шаг'/
    !if $executor == "*"
        %invoke_procedure("altr",$initiator,$liveLine,$action, $comment)
    !else
        !if $executor == "" && $initiator == ""
            !$idInitiator = $id + "initiator"
            !$idExecutor = $id + "executor"
            !$ainitiator = %get_variable_value($idInitiator)
            !$aexecutor = %get_variable_value($idExecutor)
            %invoke_procedure("rs", $aexecutor, $ainitiator, $liveLine, $action, $comment)
        !else
            !if $liveLine == "..."
                $executor --> $initiator: $action
                ...
            !else
                $executor --> $initiator $liveLine: $action
            !endif
            !$id = $id + 1
            /'Для корректного отображения в карте процесса меняем исполнителя и иницатора местами'/
            %invoke_procedure("setMetadataVariable", $executor, $initiator, $liveLine, $action, $comment, "response")
        !endif
    !endif
!endprocedure

/'Процедура для копирования уже нарисованной стрелки'/
!unquoted procedure altr($i, $liveLine="", $action="", $comment="")
    %invoke_procedure("getMetadataByStepForCopy", $i)
    !if $getType == "request"
        %invoke_procedure("rq", $getInitiator, $getExecutor, $liveLine, $action, $comment)
    !elseif $getType == "response"
        %invoke_procedure("rs", $getInitiator, $getExecutor, %string($liveLine), $action, $comment)
    !endif
    %invoke_procedure("bufferVariableCleaner")
!endprocedure

/'Процедура для обработки событий Аудит'/
!unquoted procedure audit($event, $status = "", $description = "", $source = "pafp")
    !if $status == ""
        !$eventStart = "start" + $event
        %set_variable_value($eventStart,$id)
        hnote over $source #lightyellow/lightgreen: <color:red><&media-play> <color:black>$event
    !else
        %invoke_procedure("$textNewLineCutter",$description,$commentLength)
        !$auditDescription = $textResult
        !$textResult = ""
        !$auditId = $auditId + 1
        !$eventId = "aud" + $auditId
        !$key = "start" + $event
        !$startEvent = %get_variable_value($key)
        !$eventValue = %newline() + "| " + $auditId + " | " + $event + " | " + $startEvent + " | " + $id + " | " + $status + " | " + $auditDescription + " |"
        %set_variable_value($eventId,$eventValue)
        !if $status == "FAILURE"
            hnote over $source #orange/red: <color:red><&media-stop> <color:black>$event
        !else
            hnote over $source #lightyellow/lightgreen: <color:red><&media-stop> <color:black>$event
        !endif
    !endif
!end procedure

/'Процедуры создания заметок в виде легенды в начале диаграммы'/
!unquoted procedure todo($td)
    !$todoId = $todoId + 1
    %invoke_procedure("$textNewLineCutter", $td,$commentLength) /'Форматирование текста построчно'/
    !$tdresult = $textResult
    !$textResult = ""
    !$todoList = $todoList + %newline() + "| " + $todoId + " | " + $id + " | " + $tdresult + " |"
!endprocedure

/'Процедура, отображающая таблицу с заметками'/
!unquoted procedure todoNote()
note across
Список доработок
====
$todoList
end note
!end procedure

/'Процедура, отвечающая за отображение таблицы с описанием процесса.'/
!unquoted procedure NOTE()
    /'Строим крату процесса'/
    %invoke_procedure("proccessMapBuilder")
    note across
    $processMap
    end note
    !$processMap = "| # | Инициатор | Исполнитель | Действие | Комментарий |"
!end procedure

/'Процедура рисует строку из карты процесса для последней нарисованной стрелки'/
!unquoted procedure partnote()
    %invoke_procedure("getMetadataByStep",$id)
    /'Формируем таблицу для легенды'/
    note across
    | $id | $initiatorName | $executorName | $actionResult | $commentResult |
    end note
    %invoke_procedure("bufferVariableCleaner")
!end procedure

/'Строим крату процесса, таблицу событий аудита и список доработок'/
!unquoted procedure LEGEND()
    /'Отображаем построенные таблицы при их наличии'/

/'    %invoke_procedure("proccessMapBuilder")
    !$diagramLegend = "**КАРТА ПРОЦЕССА**" + %newline() + "====" + %newline() + $processMap + %newline()'/

    /'Строим таблицу аудита'/
    %invoke_procedure("auditTableBuilder")
    !if $auditId > 0
        !$diagramLegend = $diagramLegend + %newline() + "**СОБЫТИЯ АУДИТА**" + %newline() + "====" + %newline() + $auditTable + %newline()
    !endif

    /'Строим таблицу со списком доработок'/
    !if $todoId > 0
        !$diagramLegend = $diagramLegend + %newline() + "**СПИСОК ДОРАБОТОК**" + %newline() + "====" + %newline()  + $todoList + %newline()
    !endif

/'Отображаем итоговую легенду диаграммы'/
legend  left
**КАРТА ПРОЦЕССА**
====
%invoke_procedure("proccessMapBuilder1")
====
    $diagramLegend
end legend
!end procedure
