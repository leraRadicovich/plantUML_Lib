@startuml
/'3. ФУНКЦИОНАЛЬНЫЕ ПРОЦЕДУРЫ
========================================================================================
Процедуры, заменяющие штатные средства plantUml, например: создание участников,
отрисовка стрелок, отрисовка таблиц и т.д.

Вспомогательная процедура отрисовки участников: формирует мапу имя:алиас'/
!unquoted procedure parties($partyType="participant", $name, $alias, $order="")
    !if $order != ""
        $partyType "$name" as $alias order $order
    !else
        $partyType "$name" as $alias
    !endif
    !$partiesMapper = $partiesMapper + $alias + ":" + $name + ";"
!endprocedure

/'Процедуры rq и rs заменяют синтаксис рисования стрелок. Нужно вызвать процедуру в редакторе, передать ей параметры:
$initiator - участник-инициатор взаимодействия,
$executor - участник-исполнитель взаимодействия,
$liveLine - параметр управления линией жизни взаимодействия, подразумевается ++, --, --++, ++--, ...,
$action - описание взаимодействия,
$comment - комментарий для данной операции.
Процедура во время исполнения автоматически вызывает другую вспомогательную процедуру - $processDescriptionBuilder,
для построения карты процесса в виде текста с разделителями.
Для удобства использования необходимо создать шаблон автоподстановки в используемой вами среде разработке. В IDEA это находится в меню
settings -> editor -> LiveTemplates'/

!unquoted procedure rs($executor, $initiator, $liveLine="",$action, $comment="")
    /'Это условие позволяет использовать процедуру для автоответов без отдельного вызова autorq(,,"","","")'/
    !if $executor == "" && $initiator == ""
        !$ainitiator = %substr($requestHistory, 0, %strpos($requestHistory, ":"))
        !$requestHistory = %substr($requestHistory,%strpos($requestHistory,":")+1)
        !$aexecutor = %substr($requestHistory, 0,%strpos($requestHistory,";"))
        !$requestHistory = %substr($requestHistory,%strpos($requestHistory,";")+1)

        %invoke_procedure("rs", $aexecutor, $ainitiator, $liveLine, $action, $comment)

        !$ainitiator = ""
        !$aexecutor = ""
    !else
        !if $liveLine == "..."
            $executor --> $initiator: $action
            ...
            !$id = $id + 1
            %invoke_procedure("proccessMapBuilder",$id, $executor, $initiator, $action, $comment)
        !else
            $executor --> $initiator $liveLine: $action
            !$id = $id + 1
            %invoke_procedure("proccessMapBuilder",$id, $executor, $initiator, $action, $comment)
        !endif
    !endif
!endprocedure

/'Процедура для формирования автоответа, берет из истории вызовов последний и инвертирует его,
НО не удаляя его из истории'/
!unquoted procedure altrs($liveLine="", $action, $comment="")
    !$ainitiator = %substr($requestHistory, 0, %strpos($requestHistory, ":"))
    !$altRequestHistory = %substr($requestHistory, %strpos($requestHistory, ":")+1)
    !$aexecutor = %substr($altRequestHistory, 0, %strpos($altRequestHistory,";"))

    %invoke_procedure("rs", $aexecutor, $ainitiator, $liveLine, $action, $comment)
    !$ainitiator = ""
    !$aexecutor = ""
!endprocedure

/'Новая процедура построения карты процесса'/
!unquoted procedure proccessMapBuilder($id, $initiator, $executor, $action, $comment="")
    !$legendId = $legendId + 1
    /'Форматируем текст действия в многострочный вид'/
    %invoke_procedure("$textNewLineCutter", $action,$actionLength) /'Форматирование текста построчно'/
    !$actionResult = $textResult
    !$textResult = ""

    /'Форматируем текст комментария в многострочный вид'/
    %invoke_procedure("$textNewLineCutter", $comment, $commentLength) /'Форматирование текста построчно'/
    !$commentResult = $textResult
    !$textResult = ""

    /'Получаем имя инициатора по его алиасу'/
    %invoke_procedure("$aliasToName", $initiator)
    !$initiatorName = $resultName
    !$resultName = ""

    /'Получаем имя исполнителя по его алиасу'/
    %invoke_procedure("$aliasToName", $executor)
    !$executorName = $resultName
    !$resultName = ""

    /'Текст в таблице для легенды'/
    !$legendValue = %newline() + "| " +  $id + " | " + $initiatorName + " | "+ $executorName + " | " + $actionResult + " | " + $commentResult + " |"
    %set_variable_value($legendId,$legendValue)
!endprocedure

/'Процедуры создания заметок в виде легенды в начале диаграммы'/
!unquoted procedure todo($td)
    !$todoId = $todoId + 1
    %invoke_procedure("$textNewLineCutter", $td,$commentLength) /'Форматирование текста построчно'/
    !$tdresult = $textResult
    !$textResult = ""
    !$todoList = $todoList + %newline() + "| " + $todoId + " | " + $id + " | " + $tdresult + " |"
!endprocedure

/'Процедура, отображающая таблицу с заметками'/
!unquoted procedure todoNote()
note across
Список доработок
====
$todoList
end note
!end procedure

/'Процедура, отвечающая за отображение таблицы с описанием процесса.
Принимает значения 0 или 1, где 0 - табличное отображение карты процесса с переносом строк в ячейках,
а 1 - это отображение карты процесса в виде текста с разделителем. По умолчанию вызывается с 0.
В IntelliJ IDEA: Вызываете процедуру NOTE(), с любым параметром, далее клик правой кнопкой мыши по изображению и выбираете "Copy diagramm to clipbord as unicode ASCII",
вставляйте в любой текстовый редактор, сохраняете в виде txt. Теперь сохраненный файл можно открыть в excell в виде текста с разделителями'/
!unquoted procedure NOTE()
    /'Строим крату процесса'/
    !$i = 0
    !$table = ""
    !while $i < $id || $i == $id
        !$table = $table + %get_variable_value($i)
        !$i = $i + 1
    !endwhile
    note across
    $table
    end note
!end procedure

/'Процедура рисует строку из карты процесса для последней нарисованной стрелки'/
!unquoted procedure partnote()
note across
%get_variable_value($legendId)
end note
!end procedure

/'Альтернативный способ построения карты процесса'/
!unquoted procedure LEGEND()
    /'Строим крату процесса'/
    !$i = 0
    !$table = ""
    !while $i < $id || $i == $id
        !$table = $table + %get_variable_value($i)
        !$i = $i + 1
    !endwhile
    !$diagramLegend = "**КАРТА ПРОЦЕССА**" + %newline() + "====" + %newline() + $table + %newline()
    /'Строим таблицу аудита'/
    !if %strpos($auditEventList,1) > 0
        !$diagramLegend = $diagramLegend + %newline() + "**СОБЫТИЯ АУДИТА**" + %newline() + "====" + %newline()  + $auditEventList + %newline()
    !endif
    /'Строим таблицу со списком доработок'/
    !if %strpos($todoList,1) > 0
        !$diagramLegend = $diagramLegend + %newline() + "**СПИСОК ДОРАБОТОК**" + %newline() + "====" + %newline()  + $todoList + %newline()
    !endif
legend  left
$diagramLegend
end legend
!end procedure