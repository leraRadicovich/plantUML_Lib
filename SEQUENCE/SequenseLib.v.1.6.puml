@startuml

/'SequenceBuildingLib
  Библиотека для построения сиквенс-диаграмм. Версия 1.5

  СОДЕРЖАНИЕ
  1. ТУДУШКИ И СПИСОК ИЗМЕНЕНИЙ
  2. СЛУЖЕБНЫЕ ПРОЦЕДУРЫ
  3. ПРОЦЕДУРЫ РАБОТЫ С УЧАСТНИКАМИ ПРОЦЕССА И СПИСОК УЧАСТНИКОВ
  4. ПЕРЕМЕННЫЕ, ИСПОЛЬЗУЕМЫЕ ВО ВСЕХ ФУНКЦИЯХ И ПРОЦЕДУРАХ - ГЛБАЛЬНЫЕ ПЕРЕМЕННЫЕ
  5. ПРОЦЕДУРЫ ВЗАИМОДЕЙСТИЯ
  6. ПАРАМЕТРЫ СТИЛЯ
'/


/'1. ТУДУШКИ И СПИСОК ИЗМЕНЕНИЙ
  TODO Добавить action                                                          | v1.1
  TODO Добавить инициирующую процедуру DIAGRAMM_INIT                            | v1.2
  TODO Добавить формирование табличной и текстовой (csv) карты процесса         | v1.3
  TODO Добавить altAction                                                       | v1.3
  TODO Добавить actionAlt                                                       | v1.4
  TODO Добавить alt                                                             | v1.5
  TODO Продумать порядок расположения для участников, сделать в версии 1.*      | v1.5
  TODO Добавить процедуру хранения кэша с памятью о донорских стрелках на каждом уровне вложенности
  TODO Остановить поддержку версии 1.* - 02.03.2024

  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======
  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======  ======


  '\TODO Придумать функцию для бесконченого уровня вложенности, на вход она будет принимать значение altLevel
  '\TODO Переделать логику испльзования альтов:
        альт должен содержать описание условия и указание донорской стрелки,
        все альты имеют сквозную нумерацию
        $action должна учитывать текущий счетчик вложенности альта, или не должна
  '\TODO Подумать над определением цвета и счетчиком условия для разных уровней
  '\TODO Протестировать вложенность на новой логике, продумать введение донорской переменной для определения
  '\TODO Добавить процедуру opt, сделать в версии 1.*
  '\TODO Добавить процедуру group, сделать в версии 1.*
  '\TODO Добавить процедуру par, сделать в версии 1.*, после закончить поддержку текущей версии


  '\TODO Написать вспомогательные процедуры, которые будут рисовать код, спрятанный в процедурах библиотеки
  '\TODO Написать мануал, как пользоваться библиотекой
  '\TODO Подготовить митап
  '\TODO Написать библиотеки для UseCase и Activity диаграмм
  '\TODO Перенести библиотеку в GIT

  Изменения до 02.03.2024
  1. Найден способ получить все данные из КЭШ и определенную запись по id уровня (A,B,C):
     были сложности с преобразованием level в UNICODE, которые почему-то не возникли при наполнении КЭШа
  2.

  Изменения до 01.03.2024
  1. Проведен дебаг прототипов КЭШа (ключ:значение) для донорских стрелок:
     введено преобразование $altLevel в символ латинского алфавита UNICOD

  Изменения до 28.02.2024
  1. Созданы прототипы КЭШа для донорских стрелок

  Изменения до 27.02.2024
  1. Кастомизированы функции addBox и addComponent (исходники взяты из спеки по PlantUml)
  2. Создана процедура $action, введен счетчик $counter
  3. Написаны процедуры LEGEND, NOTE, DIAGRAMM_INIT (первая DIAGRAMM)
  4. Написан прототип процедуры $altAction
  5. Введены альтернативные счетчики
  6. Введена переменная цвета альтов
  7. Добавлена процедура отрисовки action и карты процесса - $processDescriptionBuilder
  8. Добавлены буферные переменные $bufferCounter $bufferCaseCounterDescription для отображения
     карты процессов.

  Изменения от 27.02.2024
  1. Обновление принципа подсчета счетчиков:
     стрелки во вложенных альтах - счетчик ведется от донорской стрелки,
     уровень вложенности альта и счетчик кейсов в альтах - теперь отображается в условии на картинке и в комментарии в карте процесса, по принципу:
     "уровень вложенности"."номер условия", - наприме 1.1, 1 уровень альта, 1 кейс
  2. Добавлена процедура $actionAlt
  3. Добавлена процедура построения стрелок и добавления описания в карту процесса $processDescriptionBuilder, процедуры $action и $altAction
     теперь содержат только логику подсчета счетчиков, а также являются провайдерами данных для $processDescriptionBuilder.
  4. Добавлено и структурировано описание библиотеки

  Изменения от 28.02.2024
  1. Добавлена процедура $alt
  2. Настроен порядок участников процесса
'/

/' 2. СЛУЖЕБНЫЕ ПРОЦЕДУРЫ

1. DIAGRAMM($title) Функция-инициатор, инициирует процедуры добавления компонентов и групп-компонентов
   Принимает на вход заголовок диаграммы, создает группы компонетов-участников диаграммы из
   JSON $data

2. Процедура LEGEND автоматически добавляет на диагрмму блок легенда с текстовым описанием процесса
   Не работает при указании в диаграмме ленедны в явном текстовом виде (функция из коробки PlantUml)

3. Процедура NOTE автоматически добавляет на диагрмму блок note - заметка, с текстовым описанием процесса,
   Если на вход ничего не передано или 0 - формирует таблицу c текстовым описание процесса,
   если на вход передан параметр 1 - формирует JSON-строку,
   если на вход передан параметр 2 - формирует текст с разделителем ";"
'/
!unquoted procedure DIAGRAMM_INIT($title)
    Title $title
    addBox("\nWEB", lightgreen, participants)
    addBox("\nАУТЕНТИФИКАЦИЯ ПАРТНЕРОВ", lightblue, web)
!endprocedure

!unquoted procedure LEGEND()
    legend left
    Текстовое описание процесса
    $tableProcessDescription
    end legend
!endprocedure

!unquoted procedure NOTE($mode=0)
'/Табличный формат
!if $mode == 0
note across
=Текстовое описание процесса

$tableProcessDescription
end note
'/Текстовый формат с разделителями
!elseif $mode == 1
note across
=Текстовое описание процесса

$csvProcessDescription
end note
!endif
!endprocedure


/' 3. ПРОЦЕДУРЫ РАБОТЫ С УЧАСТНИКАМИ ПРОЦЕССА И СПИСОК УЧАСТНИКОВ

1. addComponent($component, $as) Процедура добавления компонентов,
   на вход приниматет заголовок и Alias компонента

2. Процедура добавления групп-компонентов (box), на вход принимает заголовок, цвет
   и необязательнные параметры: $dataSet, $component и $as
   Если указан $dataSet - будет создан box для указанного датасета,
   иначе необходимо указать $component и $as для компонентов кастомного box

3. JSON - с компонентами информационной системы
'/

!unquoted procedure addComponent($type="participant", $component, $as, $order=0)
        $type "$component" as $as order $order
!end procedure

!procedure addBox($box, $colour, $dataSet="", $type="participant", $component="", $as="", $order=0)
    !if $dataSet == participants
        box "$box" #$colour
            !foreach $item in $data.web
            addComponent($item.type, $item.name, $item.as, $item.order)
            !endfor
        end box
    !elseif $dataSet == web
        box "$box" #$colour
            !foreach $item in $data.participants
            addComponent($item.type, $item.name, $item.as, $item.order)
            !endfor
        end box
    !elseif $dataSet == ""
        box "$box" #$colour
            addComponent($item.type, $component, $as, $item.order)
        end box
    !endif
!end procedure

!$data={
  "participants": [
    {"type":"participant", "name": "front (id.vtb.ru)", "as": "front", "order":"10"},
    {"type":"participant", "name": "pafp-partner-is", "as": "pafp", "order":"20"},
    {"type":"database", "name": "redis", "as": "redis", "order":"30"},
    {"type":"database", "name": "PosgreSql", "as": "psql", "order":"40"}
    ],
  "web": [
    {"type":"actor", "name": "Пользователь", "as": "user", "order":"0"},
    {"type":"participant", "name": "Сайт партнера", "as": "site", "order":"1"},
    {"type":"participant", "name": "Анкеты", "as": "anketa", "order":"2"},
    {"type":"participant", "name": "MOS.RU", "as": "mos", "order":"3"}
    ]
}


'/ 4. ПЕРЕМЕННЫЕ, ИСПОЛЬЗУЕМЫЕ ВО ВСЕХ ФУНКЦИЯХ И ПРОЦЕДУРАХ - ГЛБАЛЬНЫЕ ПЕРЕМЕННЫЕ

    '/Счетчик сквозной автонумерации стрелок
    !global $counter = 0
    !global $techCounter = 0

    '/Счетчикии автонумерации стрелок, используемые в альтах

    !global $altCounter1 = 0
    !global $altCounter2 = 0
    !global $altCounter3 = 0
    !global $altCounter4 = 0
    !global $altCounter5 = 0

    '/Счетчикии автонумерации условий
    !global $caseCounter1 = 0
    !global $caseCounter2 = 0
    !global $caseCounter3 = 0
    !global $caseCounter4 = 0
    !global $caseCounter5 = 0

    /'Цвета для альтов разных уровней вложенности
    '/
    !global $altColour1 = "#chocolate"
    !global $altColour2 = %lighten($altColour1, 40)
    !global $altColour3 = %lighten($altColour1, 20)
    !global $altColour4 = %lighten($altColour1, 60)
    !global $altColour5 = %lighten($altColour1, 40)


    '/Счетчик вложенности альтов
    !global $altLevel = 0

    '/КЭШ донорских стрелок
    !global View = ""

    /'Буферная переменная для построения карты процесса в табличном виде и в виде текста с разделителем.
     См. процедуры LEGEND, NOTE'/
    !global $tableProcessDescription="| №\n | Инициатор\n | Исполнитель\n | Вызов/Метод\n | Комментарий\n |"
    !global $csvProcessDescription="№;Инициатор;Исполнитель;Вызов/метод;Комментарий"


/'5. ПРОЦЕДУРЫ ВЗАИМОДЕЙСТИЯ

  1. $processDescriptionBuilder($bufferCounter, $initiator, $executor, $action $liveLine="",$bufferCaseCounterDescription="", $comment="")
     Процедура построения стрелок и описания в карте процессов NOTE() и LEGEND()

  2. $action($initiator, $executor, $action, $liveLine="", $comment="")
     Процедура для описания взаимодействия между участниками процесса, для добавления стрелок вызывает процедуру $processDescriptionBuilder
     использует счетчик $counter для подсчета стрелок.

  Общее для всех альтов: донорская стрелка - та, для которой мы рисуем альтернативную.
  Общее для всех альтов: $altAction и $actionAlt не могут быть вложены друг в друга, т.к. у них разные донорские стрелки,
  поэтому счетчик ведет себя не так, как ожидается


  3. $altAction($mode="", $caseDescription="", $initiator="", $executor="", $action="", $comment="")
     Процедура для описания альтернативного взаимодействия между участниками процесса, для добавления стрелок вызывает процедуру $processDescriptionBuilder.
     Процедура работает для отображения альтернативы до донорской стрелки: сначала рисуем альт, потом донорскую стрелку.
     Поддерживается вложенность альтов, до 5 уровней вложенности.
     Процедура имеет сложную иерархичную автонумерацию, подсчет ведется относительно действия, к которому относится альт первого порядка:
        * считаются альтернативные сценарии, по принципу alt (условие 1), else (условие 2) и тд
        * считаются уровни вложенности альтов, по принципу alt (условие 1, alt2 (условие 1))
        * считаются стрелки: На каждом новом уровне вложенности, а также для каждого нового условия или альтернативы счетчик начинается с 1,
          глобальный счетчик равен значению переменной $counter.
     Максимальная глубина вложенности, при которой счетчики работают корректно равна 5.
     $altLevel == 1 Донорская стрелка - первая после альта, которая подсчитана в $counter
     $altLevel == 2 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter1
     $altLevel == 3 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter2
     $altLevel == 4 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter3
     $altLevel == 5 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter4

  4. $actionAlt($mode="", $caseDescription="", $initiator="", $executor="", $action="", $comment="")
     Процедура для описания альтернативного взаимодействия между участниками процесса, для добавления стрелок вызывает процедуру $processDescriptionBuilder.
     Процедура работает для отображения альтернативы после донорской стрелки: сначала донорскую стрелку, потом альт.
     Поддерживается вложенность альтов, до 5 уровней вложенности.
     Процедура имеет сложную иерархичную автонумерацию, подсчет ведется относительно донорской стрелки:
        * считаются альтернативные сценарии, по принципу alt (условие 1), else (условие 2) и тд
        * считаются уровни вложенности альтов, по принципу alt (условие 1, alt2 (условие 1))
        * считаются стрелки: На каждом новом уровне вложенности, а также для каждого нового условия или альтернативы счетчик начинается с 1,.
     Максимальная глубина вложенности, при которой счетчики работают корректно равна 5.
     $altLevel == 1 Донорская стрелка - первая после альта, которая подсчитана в $counter
     $altLevel == 2 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter1
     $altLevel == 3 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter2
     $altLevel == 4 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter3
     $altLevel == 5 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter4

  5. $alt($mode="", $caseDescription="", $initiator="", $executor="", $action="", $liveLine="", $comment="")
     Процедура для описания альтернативного взаимодействия между участниками процесса, для добавления стрелок вызывает процедуру $processDescriptionBuilder.
     Процедура работает для отображения альтернативы на текущем шаге, сама выступает донором для себя:
     если на шаге № возможна развилка, номер этого шага увеличивается для каждой ветки развилки,
     он же выступает на донорской позиции в встроенном счетчике стрелок в альте - глобальный счетчик стрелок $counter.
     Поддерживается вложенность альтов, до 5 уровней вложенности.
     Процедура имеет сложную иерархичную автонумерацию:
        * считаются альтернативные сценарии, по принципу alt (условие 1), else (условие 2) и тд
        * считаются уровни вложенности альтов, по принципу alt (условие 1, alt2 (условие 1))
        * считаются стрелки: На каждом новом уровне вложенности, а также для каждого нового условия или альтернативы счетчик начинается с 1,.
     Максимальная глубина вложенности, при которой счетчики работают корректно равна 5.
     $altLevel == 1 Донорская стрелка - первая после альта, которая подсчитана в $counter
     $altLevel == 2 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter1
     $altLevel == 3 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter2
     $altLevel == 4 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter3
     $altLevel == 5 Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter4
'/

!unquoted procedure $processDescriptionBuilder($bufferCounter, $initiator, $executor, $action, $liveLine="", $bufferCaseCounterDescription="", $comment="")
    $initiator -> $executor $liveLine: $bufferCounter $action
    !if $bufferCaseCounterDescription != ""
        !$tableProcessDescription = $tableProcessDescription + %newline() + "| " +  $bufferCounter + " | "+ $initiator + " | "+ $executor + " | " + $action + " | " + $bufferCaseCounterDescription + "\n" + $comment + " |"
        !$csvProcessDescription = $csvProcessDescription + %newline() + $bufferCounter + ";" + $initiator + ";"+ $executor + ";" + $action + ";" + $bufferCaseCounterDescription + $comment
    !elseif $bufferCaseCounterDescription == ""
        !$tableProcessDescription = $tableProcessDescription + %newline() + "| " +  $bufferCounter + " | "+ $initiator + " | "+ $executor + " | " + $action + " | " + $bufferCaseCounterDescription + $comment + " |"
        !$csvProcessDescription = $csvProcessDescription + %newline() + $bufferCounter + ";" + $initiator + ";"+ $executor + ";" + $action + ";" + $bufferCaseCounterDescription + $comment
    !endif
    !$liveLine = ""
!endprocedure

'/Процедура, инициирующая КЭЩ и методы работы с ним

!unquoted procedure $cash($method, $level="", $donorCounter="")
    !if $method == "post"
        !if $techCounter == 0
            !$unicodeLevel = %chr($level + 64)
            !View = View + "{id:" + $unicodeLevel + ", " + "donor:" + $donorCounter + ", " + "level:" + $level + ", " + "ech_counter:" + $techCounter + "}"
        !elseif $techCounter > 0
            !$unicodeLevel = %chr($level + 64)
            !View = View + %newline() + "{id:" + $unicodeLevel + ", " + "donor:" + $donorCounter + ", " + "level:" + $level + ", " + "tech_counter:" + $techCounter + "}"
        !endif

    !elseif ($method == "get" && $level != "")
note across
!$index = %strpos(View, %chr(%intval($level) + 64))
!$len = %strlen(View)
index = $index
level = %chr(%intval($level)+64)
!$i = %intval($index+9)
$i
donor = %intval(%substr(View, %intval($i), 2))
len = $len
end note

    !elseif $method == "delete"
        !$unicodeLevel = %chr($level + 64)

    !elseif ($method == "get" && $level == "")
note across
View
end note

    !endif
!endprocedure


!unquoted procedure $action($initiator, $executor, $action, $liveLine="", $comment="")
    !$counter = $counter + 1
    !$techCounter = $techCounter + 1
    %invoke_procedure("$processDescriptionBuilder", $counter, $initiator, $executor, $action, $liveLine, "", $comment)
    %invoke_procedure("$cash", add, $techCounter, $counter)
!endprocedure

!unquoted procedure $altAction($mode="", $caseDescription="", $initiator="", $executor="", $action="", $liveLine="", $comment="")
    !if $mode != end
        !if $mode == alt
            !$altLevel = $altLevel + 1
            !if $altLevel == 1
                !$caseCounter1 = $caseCounter1 + 1
                alt#yellow $altColour1 $altLevel.$caseCounter1: $caseDescription
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = %string($counter+1)+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$caseCounter2 = $caseCounter2 + 1
                alt#yellow $altColour2 $altLevel.$caseCounter2: $caseDescription
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$caseCounter3 = $caseCounter3 + 1
                alt#yellow $altColour3 $altLevel.$caseCounter3: $caseDescription
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$caseCounter4 = $caseCounter4 + 1
                alt#yellow $altColour4 $altLevel.$caseCounter4: $caseDescription
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+%string($altCounter3+1)+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter4'/
                !$caseCounter5 = $caseCounter5 + 1
                alt#yellow $altColour5 $altLevel.$caseCounter5: $caseDescription
                !$altCounter3 = $altCounter5 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+%string($altCounter3+1)+"."+%string($altCounter4+1)+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !elseif $mode == else
            !if $altLevel == 1
                !$caseCounter1 = $caseCounter1 + 1
                !$altColour1 = %reverse_color($altColour1)
                else $altColour1 $altLevel.$caseCounter1: $caseDescription
                !$altCounter1 = 0
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = %string($counter+1)+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$caseCounter2 = $caseCounter2 + 1
                !$altColour2 = %reverse_color($altColour2)
                else $altColour2 $altLevel.$caseCounter2: $caseDescription
                !$altCounter2 = 0
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$caseCounter3 = $caseCounter3 + 1
                !$altColour3 = %reverse_color($altColour3)
                else $altColour3 $altLevel.$caseCounter3: $caseDescription
                !$altCounter3 = 0
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$caseCounter4 = $caseCounter4 + 1
                !$altColour4 = %reverse_color($altColour4)
                else $altColour4 $altLevel.$caseCounter4: $caseDescription
                !$altCounter4 = 0
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+%string($altCounter3+1)+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5
                !$caseCounter5 = $caseCounter5 + 1
                !$altColour5 = %reverse_color($altColour5)
                else $altColour5 $altLevel.$caseCounter5: $caseDescription
                !$altCounter5 = 0
                !$altCounter5 = $altCounter5 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+%string($altCounter3+1)+"."+%string($altCounter4+1)+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !elseif $mode == ""
            !if $altLevel == 1
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = %string($counter+1)+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+%string($altCounter3+1)+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5
                !$altCounter5 = $altCounter5 + 1
                !$bufferCounter = %string($counter+1)+"."+%string($altCounter1+1)+"."+%string($altCounter2+1)+"."+%string($altCounter3+1)+"."+%string($altCounter4+1)+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !endif
    !elseif $mode == end
        !if $altLevel == 1
            !$altCounter1 = 0
            !$caseCounter1 = 0
        !elseif $altLevel == 2
            !$altCounter2 = 0
            !$caseCounter2 = 0
        !elseif $altLevel == 3
            !$altCounter3 = 0
            !$caseCounter3 = 0
        !elseif $altLevel == 4
            !$altCounter4 = 0
            !$caseCounter4 = 0
        !elseif $altLevel == 5
            !$altCounter5 = 0
            !$caseCounter5 = 0
        !endif
        !$altLevel = $altLevel - 1
        end
    !endif
!endprocedure


!unquoted procedure $actionAlt($mode="", $caseDescription="", $initiator="", $executor="", $action="", $liveLine="", $comment="")
    !if $mode != end
        !if $mode == alt
            !$altLevel = $altLevel + 1
            !if $altLevel == 1 /'Донорская стрелка - первая после альта, которая подсчитана в $counter'/
                !$caseCounter1 = $caseCounter1 + 1
                alt#yellow $altColour1 $altLevel.$caseCounter1: $caseDescription
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = $counter+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter1'/
                !$caseCounter2 = $caseCounter2 + 1
                alt#yellow $altColour2 $altLevel.$caseCounter2: $caseDescription
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter2'/
                !$caseCounter3 = $caseCounter3 + 1
                alt#yellow $altColour3 $altLevel.$caseCounter3: $caseDescription
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter3'/
                !$caseCounter4 = $caseCounter4 + 1
                alt#yellow $altColour4 $altLevel.$caseCounter4: $caseDescription
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter4'/
                !$caseCounter5 = $caseCounter5 + 1
                alt#yellow $altColour5 $altLevel.$caseCounter5: $caseDescription
                !$altCounter3 = $altCounter5 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !elseif $mode == else
            !if $altLevel == 1
                !$caseCounter1 = $caseCounter1 + 1
                !$altColour1 = %reverse_color($altColour1)
                else $altColour1 $altLevel.$caseCounter1: $caseDescription
                !$altCounter1 = 0
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = $counter+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$caseCounter2 = $caseCounter2 + 1
                !$altColour2 = %reverse_color($altColour2)
                else $altColour2 $altLevel.$caseCounter2: $caseDescription
                !$altCounter2 = 0
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$caseCounter3 = $caseCounter3 + 1
                !$altColour3 = %reverse_color($altColour3)
                else $altColour3 $altLevel.$caseCounter3: $caseDescription
                !$altCounter3 = 0
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$caseCounter4 = $caseCounter4 + 1
                !$altColour4 = %reverse_color($altColour4)
                else $altColour4 $altLevel.$caseCounter4: $caseDescription
                !$altCounter4 = 0
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5
                !$caseCounter5 = $caseCounter5 + 1
                !$altColour5 = %reverse_color($altColour5)
                else $altColour5 $altLevel.$caseCounter5: $caseDescription
                !$altCounter5 = 0
                !$altCounter5 = $altCounter5 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !elseif $mode == ""
            !if $altLevel == 1
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = $counter+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5
                !$altCounter5 = $altCounter5 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !endif
    !elseif $mode == end
        !if $altLevel == 1
            !$altCounter1 = 0
            !$caseCounter1 = 0
        !elseif $altLevel == 2
            !$altCounter2 = 0
            !$caseCounter2 = 0
        !elseif $altLevel == 3
            !$altCounter3 = 0
            !$caseCounter3 = 0
        !elseif $altLevel == 4
            !$altCounter4 = 0
            !$caseCounter4 = 0
        !elseif $altLevel == 5
            !$altCounter5 = 0
            !$caseCounter5 = 0
        !endif
        !$altLevel = $altLevel - 1
        end
    !endif
!endprocedure

!unquoted procedure $alt($mode="", $caseDescription="", $initiator="", $executor="", $action="", $liveLine="", $comment="")
    !if $mode != end
        !if $mode == alt
            !$altLevel = $altLevel + 1
            !if $altLevel == 1 /'Донорская стрелка - первая после альта, которая подсчитана в $counter'/
                !$counter = $counter + 1
                !$caseCounter1 = $caseCounter1 + 1
                alt#yellow $altColour1 $altLevel.$caseCounter1: $caseDescription
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = $counter+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter1'/
                !$caseCounter2 = $caseCounter2 + 1
                alt#yellow $altColour2 $altLevel.$caseCounter2: $caseDescription
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter2'/
                !$caseCounter3 = $caseCounter3 + 1
                alt#yellow $altColour3 $altLevel.$caseCounter3: $caseDescription
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter3'/
                !$caseCounter4 = $caseCounter4 + 1
                alt#yellow $altColour4 $altLevel.$caseCounter4: $caseDescription
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5 /'Донорская стрелка - первая после текущего вложенного альта, которая подсчитана в $altCounter4'/
                !$caseCounter5 = $caseCounter5 + 1
                alt#yellow $altColour5 $altLevel.$caseCounter5: $caseDescription
                !$altCounter3 = $altCounter5 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !elseif $mode == else
            !if $altLevel == 1
                !$caseCounter1 = $caseCounter1 + 1
                !$altColour1 = %reverse_color($altColour1)
                else $altColour1 $altLevel.$caseCounter1: $caseDescription
                !$altCounter1 = 0
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = $counter+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$caseCounter2 = $caseCounter2 + 1
                !$altColour2 = %reverse_color($altColour2)
                else $altColour2 $altLevel.$caseCounter2: $caseDescription
                !$altCounter2 = 0
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$caseCounter3 = $caseCounter3 + 1
                !$altColour3 = %reverse_color($altColour3)
                else $altColour3 $altLevel.$caseCounter3: $caseDescription
                !$altCounter3 = 0
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$caseCounter4 = $caseCounter4 + 1
                !$altColour4 = %reverse_color($altColour4)
                else $altColour4 $altLevel.$caseCounter4: $caseDescription
                !$altCounter4 = 0
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5
                !$caseCounter5 = $caseCounter5 + 1
                !$altColour5 = %reverse_color($altColour5)
                else $altColour5 $altLevel.$caseCounter5: $caseDescription
                !$altCounter5 = 0
                !$altCounter5 = $altCounter5 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !elseif $mode == ""
            !if $altLevel == 1
                !$altCounter1 = $altCounter1 + 1
                !$bufferCounter = $counter+"."+$altCounter1
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter1+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 2
                !$altCounter2 = $altCounter2 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter2+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 3
                !$altCounter3 = $altCounter3 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter3+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 4
                !$altCounter4 = $altCounter4 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter4+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !elseif $altLevel == 5
                !$altCounter5 = $altCounter5 + 1
                !$bufferCounter = $counter+"."+$altCounter1+"."+$altCounter2+"."+$altCounter3+"."+$altCounter4+"."+$altCounter5
                !$bufferCaseCounterDescription = $altLevel+"."+$caseCounter5+". "+$caseDescription+": "
                %invoke_procedure("$processDescriptionBuilder", $bufferCounter, $initiator, $executor, $action, $liveLine, $bufferCaseCounterDescription, $comment)
            !endif
        !endif
    !elseif $mode == end
        !if $altLevel == 1
            !$altCounter1 = 0
            !$caseCounter1 = 0
        !elseif $altLevel == 2
            !$altCounter2 = 0
            !$caseCounter2 = 0
        !elseif $altLevel == 3
            !$altCounter3 = 0
            !$caseCounter3 = 0
        !elseif $altLevel == 4
            !$altCounter4 = 0
            !$caseCounter4 = 0
        !elseif $altLevel == 5
            !$altCounter5 = 0
            !$caseCounter5 = 0
        !endif
        !$altLevel = $altLevel - 1
        end
    !endif
!endprocedure

'/ 6. ПАРАМЕТРЫ СТИЛЯ
hide unlinked
skinparam maxMessageSize 150
skinparam backgroundColor LightGray
skinparam sequence {
ArrowColor blue
LifeLineBorderColor blue
LifeLineBackgroundColor White
ParticipantBorderColor blue
ParticipantBackgroundColor lightBlue-DodgerBlue
ParticipantFontName Impact
ParticipantFontSize 17
ParticipantFontColor darkblue
ActorBorderColor darkblue
ActorBackgroundColor DodgerBlue
ActorFontName Impact
ActorFontColor DarkBlue
ActorFontSize 17

}

<style>
legend {
FontSize 16
FontColor white
BackGroundColor black
}
</style>
@enduml