@startuml
!include Functions/SequenceLib.v3.puml

parties(participant,alice,a,1)
parties(actor,bob,b,0)

== Первый кейс. Действие без дефолта ==
alt Первый кейс: нет донора
    autorq("b","a","++","первый вариант","")
    autors("","","")
else Первый кейс: нет донора
    autorq(b,a,"","второй вариант","хотелось бы, чтобы стрелка имела номер 1")
    autors("","","")
end

autorq(a,a,"","","")

alt Первый кейс: нет донора
    autorq("b","a","","первый вариант","")
    autors("","","")
else Первый кейс: нет донора
    autorq("b","a","",второй вариант","хотелось бы, чтобы стрелка имела номер 6")
    autors("","","")
end

autorq(b,a,"","","")
alt еще одно проявление первого кейса
    rs(a,b,"","первый вариант","")
else
    autors("","второй вариант","Хотелось бы,чтобы стрелка имела номер 11")
end

note across
    Первый вариант:
    альтернатива строится относительно курсора.
    курсором является участник, от которого в
    текущем моменте ожидается действие. По умолчанию
    это всегда самый перывй участник взаимодействия.
end note
todo("Учесть существование  курсоров. Курсор - это субъект действия в настоящий момент")
== Второй кейс. Сначала дефолтное действие, потом альтернатива ==
autorq(b,a,"","дефолтное действие","")
alt теперь альтернатива
    rq(b,a,"","альтернатива","хотелось бы, чтобы номер тоже был 13")
end

== Третий кейс. Сначала альтренатива, потом дефолтное действие ==
alt Сначала альтернатива
    rs(a,b,"","альтернативное действие","")
end
autors("","теперь дефолтное","")


todoNote()
@enduml